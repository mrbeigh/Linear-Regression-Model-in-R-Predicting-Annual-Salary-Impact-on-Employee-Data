color="Genderwise")+
theme_bw()+
geom_smooth(method = "loess", se=F)
theme(axis.text.x = element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))+
theme(axis.text.y = element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Gender)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Age)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Age,nrow=1)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Age,ncolumn=3,nrow=1)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Age,ncolumn=4,nrow=1)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_wrap(~Age,ncol=4,nrow=1)
facet_grid(Gender~Age)
ggplot(mydata, aes(x=Speed, y=Traversing))+
geom_point()+
facet_grid(Gender~Age)
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,75), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
geom_smooth(method = "loess", se=F)
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,80), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,75), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
theme(text=element_text(color="red", family="mono", size=10),
panel.background = element_rect(fill="white"),
panel.grid.major.y = element_line(color="black"),
panel.grid.minor.y = element_line(color="black"),
panel.grid.major.x = element_line(color="black"),
panel.grid.minor.x = element_blank())+
#linear representation
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,80), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
geom_smooth(method = "loess", se=F)
rlang::last_error()
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,80), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
geom_smooth(method = "loess", se=F)+
theme(axis.text.x= element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))+
theme(axis.text.y= element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))
ggplot(mydata, aes(x=Speed, y=Traversing, color=Gender))+
geom_point()+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::comma)+
scale_y_continuous(breaks = seq(10,80,5),limits = c(10,75), label=scales::comma)+
labs(title = "Speed vs Traversing Time of Pedestrian in Dhaka",
subtitle = "2019",
caption = "sourced from internet",
x = "Speed",
Y = "Traversing",
color="Genderwise")+
theme_bw()+
theme(text=element_text(color="red", family="mono", size=10),
panel.background = element_rect(fill="white"),
panel.grid.major.y = element_line(color="black"),
panel.grid.minor.y = element_line(color="black"),
panel.grid.major.x = element_line(color="black"),
panel.grid.minor.x = element_blank())+
geom_smooth(method = "loess", se=F)+
theme(axis.text.x= element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))+
theme(axis.text.y= element_text(face = "italic", color = "red", angle = 45, hjust = 1, vjust = 1, size = 12))
table 1 <- table(mydata$Age)
table1<- table(mydata$Age)
table1<- table(mydata$Age)
prop.table(table1)
table1<- table(mydata$Age)
table1
ptab <- prop.table(table1)
ptab
data8 <-as.data.frame(table1)
data9 <-as.data.frame(ptab)
ggplot(dataa, aes (x=Var1, y=Freq))+
geom_bar(stat="identity")+
ggplot(dataa, aes (x=Var1, y=Freq))+
geom_bar(stat="identity")
ggplot(dataa, aes (x=Var1, y=Freq))+
geom_bar(stat="identity")
table1<- table(mydata$Age)
table1
ptab <- prop.table(table1)
ptab
dataa <-as.data.frame(table1)
datap <-as.data.frame(ptab)
ggplot(dataa, aes (x=Var1, y=Freq))+
geom_bar(stat="identity")
scale_x_discrete(limits=c(),labels=c())+
scale_y_discrete(limits=c(), labels=c())
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")
ggplot(dataa, aes (x=Var1, y=Freq))+
geom_bar(stat="identity", color = "red")
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children, Young, Middle Aged, Old"),labels=c("Children, Young, Middle Aged, Greater than\n60 Years)+
scale_y_discrete(limits=c(), labels=c())
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children, Young, Middle Aged, Old"),labels=c("Children", "Young", "Middle Aged", "Greater than \n 60 Years
"))
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children, Young, Middle Aged, Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children, Young, Middle Aged, Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))
#interchange the axis
coord_flip()
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))+
scale_y_discrete(limits=c(), labels=c())
#interchange the axis
coord_flip()
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))+
coord_flip()
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))+
coord_flip()
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), label=scales::percent)
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_continuous(breaks = seq(0,3,0.25),limits = c(0,3), )
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_continuous(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
",label=scales::percent))
ggplot(dataa, aes (x=Var1, y=Freq, fill=Var1))+
geom_bar(stat="identity", color = "red")+
scale_x_discrete(limits=c("Children", "Young", "Middle Aged", "Old"),labels=c("Children", "Young", "Middle Aged", "Greater than 60 Years
"))+
coord_flip()
table2<- table(mydata$Intersection,mydata$Gender)
ptab <- prop.table(table2)
ptab
table2<- table(mydata$Intersection,mydata$Gender)
ptab <- prop.table(table2)
ptab
datap <-as.data.frame(ptab)
ggplot(datap, aes(x=Var1. y=Freq, fill = Var2))
table2<- table(mydata$Intersection,mydata$Gender)
ptab <- prop.table(table2)
ptab
datap <-as.data.frame(ptab)
ggplot(datap, aes(x=Var1, y=Freq, fill = Var2))
geom_bar(stat="identity", position="dodge")
ggplot(datap, aes(x=Var1, y=Freq, fill = Var2))
geom_bar(stat="identity", position="dodge")
ggplot(datap, aes(x=Var1, y=Freq, fill = Var2))+
geom_bar(stat="identity", position="dodge")
library(readxl)
Pedestrian_quiz <- read_excel("C:/Users/GIS_12/Downloads/Pedestrian_quiz.xlsx")
View(Pedestrian_quiz)
data1 <- Pedestrian_quiz$Gender
male_data <- filter(data1, Gender=="Male")
male_data <- filter(Pedestrian_quiz, Gender=="Male")
male_data <- filter(Pedestrian_quiz, Gender=="Male")
Pedestrian_quiz$Gender == male
fix(Pedestrian_quiz)
male_data <- filter(Pedestrian_quiz, Gender=="Male")
male_data <- filter(Pedestrian_quiz$Gender, Gender=="Male")
mean(Pedestrian_quiz$Gender, na.rm = T)
mean(Pedestrian_quiz$Gender)
data1 <- mutate (Pedestrian_quiz$Gender, new_var = ifelse(Gender==male, 50, 20))
install.packages(dplyr)
install.packages(dplyr)
library(dplyr
install.packages("dplyr")
install.packages("dplyr")
library(dplyr
data1 <- mutate (Pedestrian_quiz$Gender, new_var = ifelse(Gender==male, 50, 20))
library(dplyr)
library(readxl)
data1 <- mutate (Pedestrian_quiz$Gender, new_var = ifelse(Gender==male, 50, 20))
data1 <- mutate(Pedestrian_quiz, new_var = ifelse(Gender==male, 50, 20))
data1 <- mutate(Pedestrian_quiz, new_var = ifelse(Gender==male, 50, 20))
data1 <- mutate(Pedestrian_quiz, ifelse (Gender==male, 50, 20))
ifelse(Pedestrian_quiz$Gender==male, 30, 50)
ifelse(Pedestrian_quiz$Gender== "male", 30, 50)
ifelse(Pedestrian_quiz$Gender== "female", 30, 50)
ifelse(Pedestrian_quiz$Gender== "female", 30, 20)
mean(Pedestrian_quiz$Gender)
mean(Pedestrian_quiz$Gender,na.rm = T)
view(mpg)
View(mpg)
data()
install.packages('tidyverse')
library(tidyverse)
data(tidyverse)
data(packages = .tidyverse)
data()
data("gss_cat")
data (gss_cat)
View (gss_cat)
data()
View (world_bank_pop           )
View (who)
? whor
? who
Pedestrian-> class23
names(class23)
Pedestrian-> cl23
View(data8)
View(cl23)
ped.tab1<- table(cl23$Gender, cl23$Pattern)
chisq.test( ped.tab1<- table(cl23$Gender, cl23$Pattern))
chi.gendre<- chisq.test( ped.tab1<- table(cl23$Gender, cl23$Pattern))
chi.gendre$expected #related na hole expected value ki hoto
ped.tab1
#
chi.gendre<- chisq.test( ped.tab2<- table(cl23$Age, cl23$Pattern))
#lets check #related na hole expected value ki hoto
chi.gendre$expected
#lets check #related na hole expected value ki hoto
chi.gendre$expected
chi.gendre<- chisq.test (
ped.tab1<- table(cl23$Gender, cl23$Pattern))
#lets check #related na hole expected value ki hoto
chi.gendre$expected
chi.age<- chisq.test( ped.tab2<- table(cl23$Age, cl23$Pattern))
chi.age$expected #related na hole expected value ki hoto
ped.tab2
#independence t test
install.packages('car')
library(var)
library(car)
install.packages('car') #var. chk by LevenTest
install.packages("car")
levenTest( Speed ~ Gender, data=cl23)
leveneTest( Speed ~ Gender, data=cl23)
leveneTest( Speed~Gender, data=cl23)
t.test(Speed~Gender, data=cl23, var.equal= F, alternative='two.sided')
t.test(Speed~Gender, data=cl23, var.equal= T, alternative='two.sided')
wilcox.test(Speed~Gender, data=cl23, exact= F, alternative='two.sided')
wilcox.test(Speed~Gender, data=cl23, exact= F, alternative='two.sided') ->utest
utest
t.test(Speed~Gender, data=cl23, var.equal= F, alternative='two.sided')
t.test(Speed~Gender, data=cl23, var.equal= T, alternative='two.sided')
t.test(Speed~Gender, data=cl23, var.equal= F, alternative='two.sided') ->WelchT
t.test(Speed~Gender, data=cl23, var.equal= T, alternative='two.sided') ->SampleT
t.test(Speed~Gender, data=cl23, var.equal= F, alternative='two.sided') ->WelchT
##Pearson Correlation [corr.test]
# Numver~Numver value
##Pearson Correlation [corr.test]
corr.test(cl23$Speed, cl23$Traversing, method='pearson')
# Numver~Numver value
##Pearson Correlation [corr.test]
corr.test(cl23$Speed, cl23$Traversing, method='pearson')
corr.test(cl23$Speed, cl23$Traversing, method='spearmen')
# Numver~Numver value
##Pearson Correlation [corr.test]
cor.test(cl23$Speed, cl23$Traversing, method='pearson')
cor.test(cl23$Speed, cl23$Traversing, method='spearmen')
?spearmen
cor.test(cl23$Speed, cl23$Traversing, method='spearman' )
?spearman
cor.test(cl23$Speed, cl23$Traversing, method='spearman' )
cor.test(cl23$Speed, cl23$Traversing, method='spearmae' )
cor.test(cl23$Speed, cl23$Traversing, method='spearmen' )
cor.test(cl23$Speed, cl23$Traversing, method='spearman' )
cor.test(cl23$Speed, cl23$Traversing, method='kendall' )
library(readxl)
Pedestrian <- read_excel("C:/Users/GIS_12/Downloads/Pedestrian.xlsx")
View(Pedestrian)
#equation: Speed =2.06-0.03*traversing+0.07*Gender
#take traversing = 20s, Gender =Male, speed=?...........Base is female (alphabetically), therefore male = 1
2.06-0.03*20=0.07*1
res1<-lm(Speed~Traversing+Gender, data=mydata)
Summary(res1)
library(readxl)
Pedestrian <- read_excel("C:/Users/GIS_12/Downloads/Pedestrian.xlsx")
View(Pedestrian)
mydata<- Pedestrian
res<-lm(Speed~Traversing,data=mydata)
summary(res)
res1<-lm(Speed~Traversing+Gender, data=mydata)
Summary(res1)
res<-lm(Speed~Traversing,data=mydata)
summary(res)
res1<-lm(Speed~Traversing+Gender,data=mydata)
summary(res1)
res1<-lm(Speed~Traversing+Gender+Age,data=mydata)
summary(res1)
#equation: Speed =2.17-0.03*traversing+0.07*Gender-0.10*AgeY-0.15*AgeMA-0.12*Ageo
#take traversing = 20s, Gender =Male, speed=?...........Base is female (alphabetically), therefore male = 1
2.17-0.03*20+0.07*1-0.10*0-0.15*1-0.12*0
res3<-lm(Speed~., data=mydata)
summary(res3)
res4<-lm(Speed~Traversing+Gender+Age+Flow+V_Speed,data=mydata)
res4<-lm(Speed~Traversing+Gender+Age+Flow+v_Speed,data=mydata)
res4<-lm(Speed~Traversing+Gender+Age+Flow+Yield,data=mydata)
summary(res4)
#variable selection
install.packages("olsrr")
[,c(3:5,9,10,12,15)]
#make dataset shorter
mydata1<- mydata[,c(3:5,9,10,12,15)]
#make dataset shorter
mydata1<- mydata[,c(3:5,9,10,12,15)]
mydata<- Pedestrian
#make dataset shorter
mydata1<- mydata[,c(3:5,9,10,12,15)]
mydata1
library(olsrr)
res5<-lm(Speed~.,data=mydata1)
summary(res5)
library(olsrr)
res6<-ols_step_forward_p(res5, penter = 0.05, details = T)
summary(res6)
res6_sf_AIC <- ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6_sf_AIC<-ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6_sf_AIC<-ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6_<-ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6<-ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6_sf_AIC<-ols_step_forward_aic(res6, details = T)
#stepwise forward: p-value method
res6_sf_AIC<-ols_step_forward_aic(res5, details = T)
res6_sf_AIC
#stepwise forward: p-value method
res5_sf_AIC<-ols_step_forward_aic(res5, details = T)
res5_sf_AIC
res6<-ols_step_backward_p(res5, prem = 0.05, details = T)
summary(res6)
res7<-ols_step_backward_p(res5, prem = 0.05, details = T)
summary(res7)
res7<-ols_step_backward_p(res5, prem = 0.05, details = T)
summary(res7)
res5_sf_AIC<-ols_step_forward_aic(res5, details = T)
res5_sf_AIC
res7<-ols_step_both_p(res5, prem = 0.05, penter=0.01, details = T)
summary(res7)
res5_sf_AIC<-ols_step_both_aic(res5, details = T)
res5_sf_AIC
res8<-ols_step_all_possible(res5)
res8
res8<-ols_step_all_possible(res5)
all_poss<- as.data.frame(res8)
all_poss
View(all_poss)
plot(all_poss)
best<- ols_step_best_subset(res5)
best
plot(best)
plot(res8)
View(all_poss)
mydata2<- mydata[,c(3:6,9,10,12,15)]
mydata2
install.packages("GGally")
library(GGally)
library(ggplot2)
library(GGally)
ggpairs(mydata2)
###hypothesis test
t.test(Speed~Gender, equal.var=T, data= mydata2)
cor(mydata2$Width,mydata2$Speed, method = "pearson")
cor.test(mydata2$Width,mydata2$Speed, method = "pearson")
######RUN MODEL:  FULL MODEL
res<-lm(Speed~.,data = mydata2)
summary(res)
#STEP3###Variable selection
library(olssr)
#STEP3###Variable selection
library(olsrr)
ols_step_forward_p(res, penter = 0.05, details = T)
#STEP4###final model
res11<-lm (Speed~Traversing+Pattern+Width, data = mydata2)
summary(res)
#STEP4####multicollinearity
install.packages("rms")
library(rms)
vif(res11)
vif(res1)
install.packages("performance")
library(performance)
check_model(res1)
check_model(res1)
install.packages("patchwork")
check_model(res1)
library(performance)
library(see)
library(patchwork)
(res1)
#STEP5####linearity
res1$residuals
res1$fitted.values
dataframe(mydata, fitted)
as.data.frame(fitted)
fitted.values
check_model(res1)
plot(res1)
residual <- res1$residuals
shapiro.test(residual)
library(car)
ncvTest(res1)
install.packages("lmtest")
library(lmtest)
bptest(res1)
#STEP8####autocorrelation
library(car)
durbin.watson(res1)
durbinwatsonTest(res1)
durbinWatsonTest(res1)
library(stats)
acf(res1$residuals, type = "correlation")
acf(res1$residuals, type = "correlation")
check_model(res1)
plot(res1)
library(car)
#STEP10####variable transformation basics
summary(res1)
check_model(res1)
res11<-lm (Speed~log(Traversing)+Pattern+Width, data = mydata2)
summary(res)
check_model(res1)
res11<-lm (log(Speed)~log(Traversing)+Pattern+Width, data = mydata2)
check_model(res1)
#make dataset shorter
mydata2<- mydata[,c(3:5,9,10,12,15)]
#STEP2#####RUN MODEL:  FULL MODEL
res<-lm(Speed~.,data = mydata2)
####final model
res11<-lm (Speed~Traversing+Pattern+Width, data = mydata2)
check_model(res1)
res11<-lm (log(Speed)~log(Traversing)+Pattern+Width, data = mydata2)
check_model(res1)
res11<-lm (log(Speed)~log(Traversing)+Width+Gender+Age, data = mydata2)
res11<-lm (log(Speed)~log(Traversing)+Width+Gender+Age, data = mydata2)
check_model(res1)
summary(res11)
check_model(res11)
summary(res11)
